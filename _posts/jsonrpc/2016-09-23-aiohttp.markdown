---
layout: post
category: jsonrpc
title: JSON-RPC in Python with aiohttp
permalink: /jsonrpc/aiohttp
---
<div class="wide-logos" markdown="1">
![flask](/assets/aiohttp.png)
![plus](/assets/plus.png)
![json](/assets/json.png)
</div>

We'll use [aiohttp](http://aiohttp.readthedocs.io/) to take
[JSON-RPC](http://www.jsonrpc.org/) requests. It should respond to "ping" with
"pong".

Install aiohttp to take requests and
[jsonrpcserver](https://www.jsonrpcserver.com/) to process them:

```sh
$ pip install aiohttp jsonrpcserver
```
Create a `server.py`:

```python
from aiohttp import web
from jsonrpcserver import method, Result, Success, async_dispatch


@method
async def ping() -> Result:
    return Success("pong")


async def handle(request):
    return web.Response(
        text=await async_dispatch(await request.text()), content_type="application/json"
    )


app = web.Application()
app.router.add_post("/", handle)

if __name__ == "__main__":
    web.run_app(app, port=5000)
```

Start the server:

```sh
$ python server.py
======== Running on http://0.0.0.0:5000/ ========
(Press CTRL+C to quit)
```

## Synchronous client

Use [jsonrpcclient](https://www.jsonrpcclient.com/) to send requests:

```sh
$ pip install "jsonrpcclient[requests]"
$ python
```
```python
>>> from jsonrpcclient import request
>>> request("http://localhost:5000/", "ping").data.result
'pong'
```

## Asynchronous client with aiohttp

```sh
$ pip install "jsonrpcclient[aiohttp]"
```
Create a `client.py`:

```python
import aiohttp
import asyncio
from jsonrpcclient.clients.aiohttp_client import aiohttpClient

async def main(loop):
    async with aiohttp.ClientSession(loop=loop) as session:
        client = aiohttpClient(session, "http://localhost:5000/")
        response = await client.request("ping")
        print(response.data.result)

loop = asyncio.get_event_loop()
loop.run_until_complete(main(loop))
```
```sh
$ python client.py
pong
```
