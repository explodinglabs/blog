---
layout: post
category: jsonrpc
title: JSON-RPC in Python over ZeroMQ, asynchronously
permalink: /jsonrpc/zeromq-async
---
<div class="warning" markdown="1">
This post uses Jsonrpcserver 5 which requires Python 3.8+.
</div>

<div class="wide-logos" markdown="1">
![zeromq](/assets/zeromq.png)
![json](/assets/json.png)
</div>

We'll use [ZeroMQ](http://zeromq.org) to take JSON-RPC requests, and process
them asynchronously. (The synchronous version is [here](./zeromq).) The server
should respond to "ping" with "pong".

Install [aiozmq](https://aiozmq.readthedocs.io/) to take requests and
[jsonrpcserver](https://www.jsonrpcserver.com/) to process them:

```sh
pip install aiozmq jsonrpcserver
```
Create a `server.py`:

```python
from jsonrpcserver import method, Result, Success, async_dispatch
import aiozmq
import asyncio
import zmq


@method
async def ping() -> Result:
    return Success("pong")


async def main():
    rep = await aiozmq.create_zmq_stream(zmq.REP, bind="tcp://*:5000")
    while True:
        request = (await rep.read())[0].decode()
        if response := (await async_dispatch(request)).encode():
            rep.write((response,))


if __name__ == "__main__":
    asyncio.set_event_loop_policy(aiozmq.ZmqEventLoopPolicy())
    asyncio.get_event_loop().run_until_complete(main())
```

Start the server:

```sh
$ python server.py
```

## Client

Use [jsonrpcclient](https://www.jsonrpcclient.com/) to send requests:

``` shell
pip install pyzmq jsonrpcclient
```
```python
>>> from jsonrpcclient import request_json, parse_json, Ok
>>> import zmq
>>> socket = zmq.Context().socket(zmq.REQ)
>>> socket.connect("tcp://localhost:5000")
>>> socket.send_string(request_json("ping"))
>>> response = parse_json(socket.recv().decode())
>>> response.result
'pong'
```
