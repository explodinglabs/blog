---
layout: post
category: python
title: |
    Automated Code Quality Checks: How to run Black, Mypy, Pylint and Pytest in Pre-commit hooks,
    Github Actions and Deployments
permalink: /python/checks
redirect_from:
    - /black
    - /mypy
    - /pylint
    - /checks
---
<div class="wide-logos" markdown="1">
![python](/assets/python.png)
</div>

Python's not the strictest language, so to have any confidence in your code you
need to hit it with a barrage of checks to ensure it meets at least some
level of quality.

The tools I use are:

- **Black**, to ensure code is formatted
- **Pylint**, to disallow unused imports, and
- **Mypy** for type checking

A fourth is **Pytest**, but this can take some time to run so I run it
manually, not automated. (The exception being in deployment scripts -- we
can't allow deployments if tests are failing).

## Pre-commit hooks

This runs the checks locally on your development machine when you try to
commit.

Install [Pre-commit](https://pre-commit.com).

Add the following `.pre-commit-config.yaml` file to the root of your
repository.

```yaml
fail_fast: true

repos:
  - repo: https://github.com/ambv/black
    rev: 21.6b0
    hooks:
      - id: black
        args: [--diff, --check]

  - repo: https://github.com/pre-commit/mirrors-pylint
    rev: v3.0.0a3
    hooks:
      - id: pylint
        args: [--disable=all, --enable=unused-import]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.902
    hooks:
      - id: mypy
        exclude: ^tests/
        args: [--strict]
```

Install them as git hooks:
```sh
pre-commit install
```

## Github Actions

This will run the checks when a pull request is created, allowing a
reviewer to see any potential issues right away when beginning their review.

Add the following to your repository in `.github/workflows/checks.yml`.

```sh
name: Checks
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Checks
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: pip install --upgrade pip
    - run: pip install black==21.6b0 pylint==v3.0.0a3 mypy==v0.902
    - run: black --diff --check $(git ls-files '*.py')
    - run: pylint --disable=all --enable=unused-import $(git ls-files '*.py')
    - run: mypy --strict $(git ls-files '*.py')
```

Note that while pre-commit only checks the files being committed,
the GitHub Action workflow checks the entire repository. 

## Deployments

This will run final checks before deploying. These are the most important
checks because this is your last line of defense. These checks should not be
skippable.

Put the commands in your build script, before deploying.

```sh
set -e  # Stop on any error (you can also set this in the shebang)
black --diff --check /path/to/code
pylint --disable=all --enable=unused-import /path/to/code
mypy --strict /path/to/code
pytest /path/to/tests
```

Each of the commands will exit with a non-zero status if they find a problem,
which will abort the script and should fail your build.

## Notes

- It's important to choose a specific Black version and be consistent with it.
  The formatting often changes between Black versions, so what's considered
  "formatted" in one version may not be in another.
- If you have an existing project with unformatted code, _format the entire
  codebase all at once_. Don't do it gradually.
